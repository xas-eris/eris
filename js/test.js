var element = $('#ef202bab-ee74-4fc1-928d-cf79d3cb89cd');
(function(root) {
  function embed_document(root) {
    
  var docs_json = {"1f21dc6e-a15a-4e8c-8092-b993280e9985":{"roots":{"references":[{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","x":{"field":"x"},"y":{"field":"y"}},"id":"1556","type":"Line"},{"attributes":{"callback":null,"css_classes":["customTextInput"],"js_property_callbacks":{"change:value":[{"id":"1573","type":"CustomJS"}]},"value":"0"},"id":"1569","type":"TextInput"},{"attributes":{"children":[{"id":"1578","type":"Div"}]},"id":"1588","type":"WidgetBox"},{"attributes":{"overlay":{"id":"1545","type":"BoxAnnotation"}},"id":"1539","type":"BoxZoomTool"},{"attributes":{"callback":null,"css_classes":["customTextInput"],"js_property_callbacks":{"change:value":[{"id":"1573","type":"CustomJS"}]},"value":"1"},"id":"1570","type":"TextInput"},{"attributes":{"children":[{"id":"1579","type":"Div"}]},"id":"1589","type":"WidgetBox"},{"attributes":{"children":[{"id":"1576","type":"Div"}]},"id":"1586","type":"WidgetBox"},{"attributes":{"callback":null,"data":{"normalizedy":[0,1,2,3,4],"y":[5,6,7,8],"x":[1233,1234,1235,1236]},"selected":{"id":"1635","type":"Selection"},"selection_policy":{"id":"1634","type":"UnionRenderers"}},"id":"1514","type":"ColumnDataSource"},{"attributes":{},"id":"1540","type":"SaveTool"},{"attributes":{"callback":null,"css_classes":["customTextInput"],"js_property_callbacks":{"change:value":[{"id":"1573","type":"CustomJS"}]},"value":"0.1"},"id":"1571","type":"TextInput"},{"attributes":{"bounds":[null,null],"callback":null,"end":1.2,"start":-1},"id":"1552","type":"Range1d"},{"attributes":{},"id":"1541","type":"ResetTool"},{"attributes":{"callback":null,"data":{"txtdata":["0","1","0.1"]},"selected":{"id":"1640","type":"Selection"},"selection_policy":{"id":"1639","type":"UnionRenderers"}},"id":"1572","type":"ColumnDataSource"},{"attributes":{"children":[{"id":"1517","subtype":"Figure","type":"Plot"},{"id":"1584","type":"Column"},{"id":"1590","type":"Column"}]},"id":"1591","type":"Row"},{"attributes":{"align":"center","plot":null,"text":"V2O5","text_font_size":{"value":"12pt"}},"id":"1516","type":"Title"},{"attributes":{"args":{"alpha_txt":{"id":"1569","type":"TextInput"},"checkbox1":{"id":"1565","type":"CheckboxGroup"},"checkbox2":{"id":"1567","type":"CheckboxGroup"},"fwhm_txt":{"id":"1571","type":"TextInput"},"slider":{"id":"1564","type":"Slider"},"slider2":{"id":"1566","type":"Slider"}},"code":"\n    var changedata = txtVals.data;\n    txtdata = changedata['txtdata'];\n    \n    // Set alpha depending on whether its slider or text input was adjusted:\n    // First, if the slider was adjusted...\n    if (Number(txtdata[0]) === Number(alpha_txt.value)) {\n        var alpha = slider.value;\n        alpha_txt.value = '' + alpha;\n        txtdata[0] = alpha;\n    }\n    // Else, the text input was changed...\n    else {\n        var alpha = Number(alpha_txt.value);\n        slider.value = alpha;\n        txtdata[0] = alpha;\n    }\n    \n    // Set thicknessFactor depending on whether its slider or text input was adjusted:\n    if (Number(txtdata[1]) === Number(th_txt.value)) {\n        var thicknessFactor = slider2.value;\n        th_txt.value = '' + thicknessFactor;\n        txtdata[1] = thicknessFactor;\n    }\n    else {\n        var thicknessFactor = Number(th_txt.value);\n        slider2.value = thicknessFactor;\n        txtdata[1] = thicknessFactor;\n    }\n    \n    // Set FWHM depending on whether its slider or text input was adjusted:\n    if (Number(txtdata[2]) === Number(fwhm_txt.value)) {\n        var FWHM = slider3.value;\n        fwhm_txt.value = '' + FWHM;\n        txtdata[2] = FWHM;\n    }\n    else {\n        var FWHM = Number(fwhm_txt.value);\n        slider3.value = FWHM;\n        txtdata[2] = FWHM;\n    }\n    \n    var normalize = JSON.stringify(checkbox1.active);\n    normalize = Number(normalize[1]); // makes normalize equal to 0 if the checkbox is checked; otherwise its value is NaN.\n    var useLorentzian = JSON.stringify(checkbox2.active);\n    useLorentzian = Number(useLorentzian[1]);\n    var data = source.data;\n    var data2 = source2.data;\n    x = data['x'];\n    y = data['y'];\n\n    mu = data2['mu'];\n    i0 = data2['i0'];\n    iT = data2['iT'];\n    \n    // Convolve data if checkbox is checked:\n    if (useLorentzian === 0) {\n        // Choose deltaE, the horizontal separation between points in the to-be interpolated data, to be the smallest existing separation between points in the non-interpolated data:\n        var deltaE = \"\";\n        for (var i = 1; i < x.length; i++) {\n            if (Math.abs(x[i] - x[i-1]) < deltaE || deltaE === \"\"){\n                deltaE = x[i] - x[i-1];\n            }\n        }\n        \n        // The number of points in the interpolated data:\n        arrayLength = Math.floor( (x[x.length - 1] - x[0]) / deltaE );\n        \n        // Create a list of the interpolated energy (i.e., x) values:\n        var interpolatedX = [];\n        var firstXValue = Math.ceil(x[0]);\n        for (var i = 0; i < arrayLength; i++) {\n            interpolatedX.push(firstXValue + i * deltaE);\n        }\n        \n        // Create a list of thicknessFactor-dependent, and alpha-dependent, simulated IT data:\n        var simulatedIT = [];\n        for (var i = 0; i < x.length; i++) {\n            simulatedIT.push( alpha * i0[i] + (1-alpha) * i0[i] * Math.pow(Math.E, - thicknessFactor * mu[i] ) );\n        }\n        \n        // Interpolate simulatedIT:\n        var interpolatedIT = [];\n        j = 0;\n        for (var i = 1; i < x.length; i++) {\n            iTInitial = simulatedIT[i-1];\n            iTFinal = simulatedIT[i];\n            xInitial = x[i-1];\n            xFinal = x[i];\n            \n            var interpolatingSlope = (iTFinal - iTInitial) / (xFinal - xInitial);\n            while (interpolatedX[j] <= xFinal) {\n                interpolatedIT.push( iTInitial + interpolatingSlope * (interpolatedX[j] - xInitial) );\n                j++;\n            }\n        }\n        \n        // Interpolate i0:\n        var interpolatedI0 = [];\n        j = 0;\n        for (var i = 1; i < x.length; i++) {\n            i0Initial = i0[i-1];\n            i0Final = i0[i];\n            xInitial = x[i-1];\n            xFinal = x[i];\n            \n            var interpolatingSlope = (i0Final - i0Initial) / (xFinal - xInitial);\n            while (interpolatedX[j] <= xFinal) {\n                interpolatedI0.push( i0Initial + interpolatingSlope * (interpolatedX[j] - xInitial) );\n                j++;\n            }\n        }\n        \n        // Create a list of Lorentzian values:\n        function lorentzian(x,x0) {\n            return FWHM / (2 * Math.PI * ((x - x0)*(x - x0) + FWHM*FWHM/4));\n        }\n        \n        // Convolve the iT and i0 data with the Lorentzian:\n        for (var i = 0; i < x.length; i++) {\n            var iTaccumulator = 0;\n            var i0accumulator = 0;\n            var lorCenter = x[i];\n            for (var j = 0; j < arrayLength; j++) {\n                lorValue = lorentzian(interpolatedX[j],lorCenter);\n                iTaccumulator += interpolatedIT[j] * lorValue; // accumulator += interpolatedIT[j] * lorList[arrayLength - 1 - i + j]; could work if we end up displaying interpolated data instead of only using interpolated data for the integration (as we're presently doing). In that case, the iteration variable \"i\" would need to go all the way to arrayLength instead of merely x.length\n                i0accumulator += interpolatedI0[j] * lorValue;\n            }\n            // calculate mu:\n            y[i] = - Math.log(iTaccumulator/i0accumulator);\n        }\n        \n    }\n    \n    // when the convolution checkbox gets un-checked, re-calculate mu and apply pinhole effect:\n    else {\n        for (var i = 0; i < x.length; i++) {\n            var modifiedItransValue = alpha + (1-alpha) * Math.pow(Math.E, - thicknessFactor * mu[i]);\n            y[i] = - Math.log(modifiedItransValue);\n        }\n    }\n    \n    // normalize the data:\n    if (normalize === 0) {\n        // first determine the index corresponding to the first energy value greater than 5500:\n        var index = -1;\n        x.some(function(el, i) {\n            if (el > 5500) {\n                index = i;\n                return true;\n            }\n        });\n        \n        var diff = y[index] - y[0];\n        for (var i = 0; i < x.length; i++) {\n            if (alpha != 1) {\n                y[i] /= diff;\n            }\n        }\n    }\n    \n    // subtract vertical offset:\n    var b = y[0];\n    for (var i = 0; i < x.length; i++) {\n        y[i] -= b;\n    }\n    \n    // necessary becasue we mutated source.data in-place:\n    source.change.emit();\n    txtVals.change.emit();\n    slider.change.emit();\n    slider2.change.emit();\n"},"id":"1573","type":"CustomJS"},{"attributes":{},"id":"1542","type":"HelpTool"},{"attributes":{},"id":"1574","type":"Div"},{"attributes":{"source":{"id":"1514","type":"ColumnDataSource"}},"id":"1558","type":"CDSView"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_multi":null,"active_scroll":"auto","active_tap":"auto","tools":[{"id":"1537","type":"PanTool"},{"id":"1538","type":"WheelZoomTool"},{"id":"1539","type":"BoxZoomTool"},{"id":"1540","type":"SaveTool"},{"id":"1541","type":"ResetTool"},{"id":"1542","type":"HelpTool"}]},"id":"1543","type":"Toolbar"},{"attributes":{"line_color":"blue","x":{"field":"x"},"y":{"field":"y"}},"id":"1555","type":"Line"},{"attributes":{},"id":"1575","type":"Div"},{"attributes":{"data_source":{"id":"1514","type":"ColumnDataSource"},"glyph":{"id":"1555","type":"Line"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"1556","type":"Line"},"selection_glyph":null,"view":{"id":"1558","type":"CDSView"}},"id":"1557","type":"GlyphRenderer"},{"attributes":{},"id":"1576","type":"Div"},{"attributes":{},"id":"1631","type":"BasicTickFormatter"},{"attributes":{},"id":"1523","type":"LinearScale"},{"attributes":{"bottom_units":"screen","fill_alpha":{"value":0.5},"fill_color":{"value":"lightgrey"},"left_units":"screen","level":"overlay","line_alpha":{"value":1.0},"line_color":{"value":"black"},"line_dash":[4,4],"line_width":{"value":2},"plot":null,"render_mode":"css","right_units":"screen","top_units":"screen"},"id":"1545","type":"BoxAnnotation"},{"attributes":{},"id":"1633","type":"BasicTickFormatter"},{"attributes":{},"id":"1525","type":"LinearScale"},{"attributes":{},"id":"1577","type":"Div"},{"attributes":{},"id":"1634","type":"UnionRenderers"},{"attributes":{"axis_label":"Energy (eV)","axis_label_text_font_size":{"value":"12pt"},"formatter":{"id":"1633","type":"BasicTickFormatter"},"plot":{"id":"1517","subtype":"Figure","type":"Plot"},"ticker":{"id":"1528","type":"BasicTicker"}},"id":"1527","type":"LinearAxis"},{"attributes":{},"id":"1578","type":"Div"},{"attributes":{"callback":null,"end":1,"js_property_callbacks":{"change:value":[{"id":"1573","type":"CustomJS"}]},"start":0,"step":0.01,"title":"alpha","value":0},"id":"1564","type":"Slider"},{"attributes":{"children":[{"id":"1586","type":"WidgetBox"},{"id":"1587","type":"WidgetBox"},{"id":"1588","type":"WidgetBox"},{"id":"1589","type":"WidgetBox"},{"id":"1585","type":"WidgetBox"}],"width":65},"id":"1590","type":"Column"},{"attributes":{},"id":"1528","type":"BasicTicker"},{"attributes":{},"id":"1579","type":"Div"},{"attributes":{"line_color":"red","x":{"field":"x"},"y":{"field":"normalizedy"}},"id":"1560","type":"Line"},{"attributes":{},"id":"1635","type":"Selection"},{"attributes":{},"id":"1637","type":"UnionRenderers"},{"attributes":{"plot":{"id":"1517","subtype":"Figure","type":"Plot"},"ticker":{"id":"1528","type":"BasicTicker"}},"id":"1531","type":"Grid"},{"attributes":{"children":[{"id":"1565","type":"CheckboxGroup"},{"id":"1567","type":"CheckboxGroup"}]},"id":"1580","type":"WidgetBox"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","x":{"field":"x"},"y":{"field":"normalizedy"}},"id":"1561","type":"Line"},{"attributes":{},"id":"1638","type":"Selection"},{"attributes":{"axis_label_text_font_size":{"value":"12pt"},"formatter":{"id":"1631","type":"BasicTickFormatter"},"plot":{"id":"1517","subtype":"Figure","type":"Plot"},"ticker":{"id":"1533","type":"BasicTicker"}},"id":"1532","type":"LinearAxis"},{"attributes":{"children":[{"id":"1569","type":"TextInput"},{"id":"1570","type":"TextInput"},{"id":"1571","type":"TextInput"}]},"id":"1585","type":"WidgetBox"},{"attributes":{"data_source":{"id":"1514","type":"ColumnDataSource"},"glyph":{"id":"1560","type":"Line"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"1561","type":"Line"},"selection_glyph":null,"view":{"id":"1563","type":"CDSView"}},"id":"1562","type":"GlyphRenderer"},{"attributes":{"below":[{"id":"1527","type":"LinearAxis"}],"left":[{"id":"1532","type":"LinearAxis"}],"min_border_right":40,"plot_height":300,"plot_width":500,"renderers":[{"id":"1527","type":"LinearAxis"},{"id":"1531","type":"Grid"},{"id":"1532","type":"LinearAxis"},{"id":"1536","type":"Grid"},{"id":"1545","type":"BoxAnnotation"},{"id":"1557","type":"GlyphRenderer"},{"id":"1562","type":"GlyphRenderer"}],"title":{"id":"1516","type":"Title"},"toolbar":{"id":"1543","type":"Toolbar"},"x_range":{"id":"1553","type":"Range1d"},"x_scale":{"id":"1523","type":"LinearScale"},"y_range":{"id":"1552","type":"Range1d"},"y_scale":{"id":"1525","type":"LinearScale"}},"id":"1517","subtype":"Figure","type":"Plot"},{"attributes":{"callback":null,"data":{"i0":[1,2,3,4],"it":[5,6,7],"xxy":[1234,1235,1236,1237]},"selected":{"id":"1638","type":"Selection"},"selection_policy":{"id":"1637","type":"UnionRenderers"}},"id":"1515","type":"ColumnDataSource"},{"attributes":{"children":[{"id":"1564","type":"Slider"},{"id":"1566","type":"Slider"},{"id":"1568","type":"Slider"}],"width":450},"id":"1581","type":"WidgetBox"},{"attributes":{},"id":"1533","type":"BasicTicker"},{"attributes":{"source":{"id":"1514","type":"ColumnDataSource"}},"id":"1563","type":"CDSView"},{"attributes":{},"id":"1639","type":"UnionRenderers"},{"attributes":{},"id":"1640","type":"Selection"},{"attributes":{"dimension":1,"plot":{"id":"1517","subtype":"Figure","type":"Plot"},"ticker":{"id":"1533","type":"BasicTicker"}},"id":"1536","type":"Grid"},{"attributes":{"children":[{"id":"1582","type":"WidgetBox"},{"id":"1580","type":"WidgetBox"},{"id":"1583","type":"WidgetBox"},{"id":"1581","type":"WidgetBox"}]},"id":"1584","type":"Column"},{"attributes":{"callback":null,"js_property_callbacks":{"change:active":[{"id":"1573","type":"CustomJS"}]},"labels":["Normalize"]},"id":"1565","type":"CheckboxGroup"},{"attributes":{"children":[{"id":"1575","type":"Div"}]},"id":"1582","type":"WidgetBox"},{"attributes":{"bounds":[null,null],"callback":null,"end":5600,"start":5350},"id":"1553","type":"Range1d"},{"attributes":{"callback":null,"end":5,"js_property_callbacks":{"change:value":[{"id":"1573","type":"CustomJS"}]},"start":0.1,"step":0.1,"title":"thickness factor","value":1},"id":"1566","type":"Slider"},{"attributes":{"children":[{"id":"1574","type":"Div"}]},"id":"1583","type":"WidgetBox"},{"attributes":{"callback":null,"js_property_callbacks":{"change:active":[{"id":"1573","type":"CustomJS"}]},"labels":["Convolve with Lorentzian"]},"id":"1567","type":"CheckboxGroup"},{"attributes":{},"id":"1537","type":"PanTool"}],"root_ids":["1592"]},"title":"Bokeh Application","version":"1.0.2"}};
  var render_items = [{"docid":"1f21dc6e-a15a-4e8c-8092-b993280e9985","roots":{"1592":"d26f18ce-60a8-4829-99ef-f13ba34b6869"}}];
  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);

  }
  if (root.Bokeh !== undefined) {
    embed_document(root);
  } else {
    var attempts = 0;
    var timer = setInterval(function(root) {
      if (root.Bokeh !== undefined) {
        embed_document(root);
        clearInterval(timer);
      }
      attempts++;
      if (attempts > 100) {
        console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
        clearInterval(timer);
      }
    }, 10, root)
  }
})(window);
